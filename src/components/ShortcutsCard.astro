---
import type { Shortcut } from '../models/Shortcut';
import Accordion from './Accordion.astro';

export interface Props {
  shortcut: Shortcut;
}

const { shortcut } = Astro.props;

---
<div class="flex flex-col
  frosted-glass rounded-xl
">
  <div class="w-full bg-gray-100/60 dark:bg-slate-800/60 rounded-t-xl p-2 md:p-4">
    <p class="mt-1 text-xl md:text-2xl font-extrabold text-center">
      {shortcut.icon_classes && <i class:list={[shortcut.icon_classes, 'text-2xl']}></i>}
      {shortcut.name}
    </p>
  </div>
  <div class="p-4 md:p-5 text-lg md:text-xl font-semibold flex flex-col">
    {(shortcut.children as Shortcut[]).map(sh => {
      if (sh.children && sh.children.length > 0)
        return (
          <Accordion title={sh.name} icon_classes={sh.icon_classes}>
            <div class="flex flex-col ml-8
            ">
              {sh.children.map(shChild => (
                <a href={shChild.url} class="inline-flex justify-start items-center py-3 px-4
                  bg-clip-text bg-300% hover:animate-gradient-pulse-once
                  hover:text-transparent hover:bg-gradient-to-r
                ">
                  {shChild.icon_classes && <i class:list={[shChild.icon_classes, 'text-2xl']}></i>}
                  {shChild.name}
                </a>
              ))}
            </div>
          </Accordion>
        );
      else
        return (
          <a href={sh.url} class="inline-flex justify-start items-center py-3 px-4
            bg-clip-text bg-300% hover:animate-gradient-pulse-once
            hover:text-transparent hover:bg-gradient-to-r
          ">
            {sh.icon_classes && <i class:list={[sh.icon_classes, 'text-2xl']}></i>}
            {sh.name}
          </a>
        );
    })}
  </div>
</div>
